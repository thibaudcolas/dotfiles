# Make vim the default editor
export EDITOR="vim";
export REACT_EDITOR="code";

# Larger bash history (allow 32³ entries; default is 500)
export HISTSIZE=32768;
export HISTFILESIZE=$HISTSIZE;
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';
# Make some commands not show up in history
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help";

# Prefer US English and use UTF-8
export LANG="en_US.UTF-8";
export LC_ALL="en_US.UTF-8";

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=~/.node_history;
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Highlight section titles in manual pages
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X";

# Link Homebrew casks in `/Applications` rather than `~/Applications`
export HOMEBREW_CASK_OPTS="--appdir=/Applications";

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# http://docs.python-guide.org/en/latest/writing/gotchas/#disabling-bytecode-pyc-files
export PYTHONDONTWRITEBYTECODE=1

export PIP_DISABLE_PIP_VERSION_CHECK=1
# https://storybook.js.org/docs/react/configure/telemetry/
export STORYBOOK_DISABLE_TELEMETRY=1
export GH_NO_UPDATE_NOTIFIER=true

# BREWPREFIX="$(brew --prefix openssl)"
BREWPREFIX="/usr/local/opt/openssl@1.1"
export CFLAGS="-I$BREWPREFIX/include";
export LDFLAGS="-L$BREWPREFIX/lib";

export BROWSER="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

# Runtimes
# ========

# https://github.com/Schniz/fnm/blob/master/docs/configuration.md
eval "$(fnm env)"

# Android SDK for React Native.
export ANDROID_HOME=$HOME/Library/Android/sdk

# Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Load .NET stack
# source dnvm.sh
# export MONO_MANAGED_WATCHER=disabled

# Rbenv
# Commented out for use on demand.
# eval "$(rbenv init -)"

# Python https://github.com/pyenv/pyenv#b-set-up-your-shell-environment-for-pyenv
export PYENV_ROOT="$HOME/.pyenv"

# Rust
# Commented out for use on demand.
# . "$HOME/.cargo/env"

# OCaml
# Commented out for use on demand.
# . ~/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# [ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc

export DJANGOPROJECT_DATA_DIR=./.envrc
